{"ast":null,"code":"import axios from 'axios';\n\n// Create an axios instance with custom config\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  timeout: 30000,\n  // Increase timeout to 30 seconds\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add a request interceptor\ninstance.interceptors.request.use(config => {\n  // You can modify the request config here\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Add a response interceptor\ninstance.interceptors.response.use(response => {\n  return response;\n}, error => {\n  // Handle timeout errors specifically\n  if (error.code === 'ECONNABORTED' && error.message.includes('timeout')) {\n    console.log('Request timed out');\n    // You could implement automatic retry logic here\n  }\n  return Promise.reject(error);\n});\nexport default instance;","map":{"version":3,"names":["axios","instance","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","error","Promise","reject","response","code","message","includes","console","log"],"sources":["/Users/appypiellp/Documents/hackathon/ad-generator/client/src/utils/axios.js"],"sourcesContent":["import axios from 'axios';\n\n// Create an axios instance with custom config\nconst instance = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000',\n  timeout: 30000, // Increase timeout to 30 seconds\n  headers: {\n    'Content-Type': 'application/json',\n  }\n});\n\n// Add a request interceptor\ninstance.interceptors.request.use(\n  config => {\n    // You can modify the request config here\n    return config;\n  },\n  error => {\n    return Promise.reject(error);\n  }\n);\n\n// Add a response interceptor\ninstance.interceptors.response.use(\n  response => {\n    return response;\n  },\n  error => {\n    // Handle timeout errors specifically\n    if (error.code === 'ECONNABORTED' && error.message.includes('timeout')) {\n      console.log('Request timed out');\n      // You could implement automatic retry logic here\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\nexport default instance;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAM,CAAC;EAC5BC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;EACjEC,OAAO,EAAE,KAAK;EAAE;EAChBC,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAP,QAAQ,CAACQ,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAI;EACR;EACA,OAAOA,MAAM;AACf,CAAC,EACDC,KAAK,IAAI;EACP,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAZ,QAAQ,CAACQ,YAAY,CAACO,QAAQ,CAACL,GAAG,CAChCK,QAAQ,IAAI;EACV,OAAOA,QAAQ;AACjB,CAAC,EACDH,KAAK,IAAI;EACP;EACA,IAAIA,KAAK,CAACI,IAAI,KAAK,cAAc,IAAIJ,KAAK,CAACK,OAAO,CAACC,QAAQ,CAAC,SAAS,CAAC,EAAE;IACtEC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC;EACF;EAEA,OAAOP,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAeZ,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}